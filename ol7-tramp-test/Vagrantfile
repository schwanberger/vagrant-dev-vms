# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "1" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure('2') do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = 'oraclelinux/7'

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = 'https://oracle.github.io/vagrant-projects/boxes/oraclelinux/7.json'

  cluster = {
    'ol7-1' => { ip: '69.140.140.11', cpus: 1, mem: 512 },
    'ol7-2' => { ip: '69.140.140.12', cpus: 1, mem: 512 },
    'ol7-3' => { ip: '69.140.140.13', cpus: 1, mem: 512 }

  }

  cluster.each_with_index do |(hostname, info), _index|
    config.vm.define hostname do |cfg|
      cfg.vbguest.auto_update = false
      cfg.vbguest.no_remote = true
      cfg.vm.provider :virtualbox do |vb, override|
        override.vm.network :private_network, ip: (info[:ip])
        override.vm.hostname = hostname
        vb.name = hostname
        # vb.customize ["modifyvm", :id, "--memory", info[:mem], "--cpus", info[:cpus], "--hwvirtex", "on"]
        vb.customize ['modifyvm', :id, '--memory', info[:mem], '--cpus', info[:cpus]]
        # vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end

      cfg.provision 'Allow password ssh for user vagrant', type: 'shell' do |s|
        s.privileged = true
        s.inline = <<~'SHELL'
          sed -e '/#PasswordAuthentication.*/c\PasswordAuthentiation yes\nAllowUsers vagrant' /etc/ssh/sshd_config
          echo "vagrant" | sudo passwd --stdin vagrant
        SHELL
      end
    end
  end
end
